; Test all arithmetic instructions
##################################
# add - add to accumulator
mvi a,47h
mvi b,51h
add b
.assert a=98h, s=1, z=0, ac=0, p=0, cy=0

##################################
# aci  Add Immediate data to Accumulator Using Carry
mvi a,26h
stc
aci 57h
.assert a=7eh, s=0, z=0, ac=0, p=1, cy=0

##################################
# adc - Add register to accumulator with carry
# bc = 2498h
# de = 54a1h
# use add followed by adc to achieve this bc + de
mvi b,24h
mvi c,98h
mvi d,54h
mvi e,a1h

# add c and e
mov a,c
add e
.assert cy=1, a=39h
mov a, b
adc d

.assert cy=0, a=79h

##################################
# adi - Add immediate to accumulator
mvi a,4ah
adi 59h
.assert a=a3h, s=1, z=0, ac=1, p=1, cy=0

##################################
# aci - Add immediate data to accumulator using carry
mvi a,26h
stc
aci 57h
.assert a=7eh, s=0, z=0, ac=0, p=1, cy=0


##################################
# sub - subtract from accumulator
mvi c,40h
mvi a,37h
sub c
.assert a=f7h, s=1, z=0, ac=0, p=0, cy=1

##################################
# sui - subtract immediate data from accumulator
mvi a,40h
sui 37h
.assert a=09h, s=0, z=0, ac=0, p=1, cy=0


##################################
# sbb - Subtract from Accumulator Using Borrow (Carry) Flag
mvi a,37h
mvi b,3fh
stc
sbb b
.assert a=f7h, cy=1

##################################
# sbi - Subtract Immediate from Accumulator Using Borrow (Carry) Flag
stc
mvi a,37h
sbi 25h
.assert a=11h, s=0, z=0, ac=1, p=1, cy=0

##################################
# inr - Increment Specified Byte by One
stc
cmc # complement carry to zero it out
mvi d,ffh
inr d
.assert d=0, cy=0

##################################
# dcr - Decrement Specified Byte by One.  CY flag is not modified
stc
cmc # complement carry to zero it ou
mvi b,00
dcr b
.assert b=ffh, cy=0
# using dcr to decrement the contents of memory location 2085 which holds A0h
lxi h, 2085h
mvi m, a0h
dcr m
.assert [2085h]=9Fh, cy=0

##################################
# inx - Increment register pair(b,d,h,sp) by 1.  No flags are affected
lxi h, 9fffh
inx h
inx b
inx d
inx sp
.assert h=a0h, l=00

##################################
# dcx - Decrement register pair(b,d,h,sp) by 1.  No flags are affected
lxi d,2000h
dcx d
.assert d=1fh, e=ffh

##################################
# dad - add register pair to HL
lxi h,0242h
dad H
.assert h=04h, l=84h
dad b
dad d
dad sp


